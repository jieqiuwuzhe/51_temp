C51 COMPILER V9.52.0.0   LCD                                                               05/15/2015 14:17:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE lcd.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"lcd.h"
   2          
   3          char sheshi=(char)0xdf;
   4          char dian='.';
   5          char kong=' ';
   6          char du[] = "C  ";
   7          unsigned char first1[]={"SET: "};
   8          unsigned char second[]={"NOW: "};
   9          
  10          /*******************************************************************************
  11          * 函 数 名         : Lcd1602_Delay1ms
  12          * 函数功能       : 延时函数，延时1ms
  13          * 输    入         : c
  14          * 输    出         : 无
  15          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  16          *******************************************************************************/
  17          
  18          void Lcd1602_Delay1ms(uint c)   //误差 0us
  19          {
  20   1          uchar a,b;
  21   1        for (; c>0; c--)
  22   1        {
  23   2           for (b=199;b>0;b--)
  24   2           {
  25   3              for(a=1;a>0;a--);
  26   3           }      
  27   2        }
  28   1            
  29   1      }
  30          
  31          /*******************************************************************************
  32          * 函 数 名         : LcdWriteCom
  33          * 函数功能       : 向LCD写入一个字节的命令
  34          * 输    入         : com
  35          * 输    出         : 无
  36          *******************************************************************************/
  37          #ifndef   LCD1602_4PINS  //当没有定义这个LCD1602_4PINS时
              void LcdWriteCom(uchar com)   //写入命令
              {
                LCD1602_E = 0;     //使能
                LCD1602_RS = 0;    //选择发送命令
                LCD1602_RW = 0;    //选择写入
                
                LCD1602_DATAPINS = com;     //放入命令
                Lcd1602_Delay1ms(1);    //等待数据稳定
              
                LCD1602_E = 1;            //写入时序
                Lcd1602_Delay1ms(5);    //保持时间
                LCD1602_E = 0;
              }
              #else 
  52          void LcdWriteCom(uchar com)   //写入命令
  53          {
  54   1        LCD1602_E = 0;   //使能清零
  55   1        LCD1602_RS = 0;  //选择写入命令
C51 COMPILER V9.52.0.0   LCD                                                               05/15/2015 14:17:59 PAGE 2   

  56   1        LCD1602_RW = 0;  //选择写入
  57   1      
  58   1        LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
  59   1        Lcd1602_Delay1ms(1);
  60   1      
  61   1        LCD1602_E = 1;   //写入时序
  62   1        Lcd1602_Delay1ms(5);
  63   1        LCD1602_E = 0;
  64   1      
  65   1      //  Lcd1602_Delay1ms(1);
  66   1        LCD1602_DATAPINS = com << 4; //发送低四位
  67   1        Lcd1602_Delay1ms(1);
  68   1      
  69   1        LCD1602_E = 1;   //写入时序
  70   1        Lcd1602_Delay1ms(5);
  71   1        LCD1602_E = 0;
  72   1      }
  73          #endif
  74          /*******************************************************************************
  75          * 函 数 名         : LcdWriteData
  76          * 函数功能       : 向LCD写入一个字节的数据
  77          * 输    入         : dat
  78          * 输    出         : 无
  79          *******************************************************************************/       
  80          #ifndef   LCD1602_4PINS      
              void LcdWriteData(uchar dat)      //写入数据
              {
                LCD1602_E = 0;  //使能清零
                LCD1602_RS = 1; //选择输入数据
                LCD1602_RW = 0; //选择写入
              
                LCD1602_DATAPINS = dat; //写入数据
                Lcd1602_Delay1ms(1);
              
                LCD1602_E = 1;   //写入时序
                Lcd1602_Delay1ms(5);   //保持时间
                LCD1602_E = 0;
              }
              #else
  95          void LcdWriteData(uchar dat)      //写入数据
  96          {
  97   1        LCD1602_E = 0;    //使能清零
  98   1        LCD1602_RS = 1;   //选择写入数据
  99   1        LCD1602_RW = 0;   //选择写入
 100   1      
 101   1        LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
 102   1        Lcd1602_Delay1ms(1);
 103   1      
 104   1        LCD1602_E = 1;    //写入时序
 105   1        Lcd1602_Delay1ms(5);
 106   1        LCD1602_E = 0;
 107   1      
 108   1        LCD1602_DATAPINS = dat << 4; //写入低四位
 109   1        Lcd1602_Delay1ms(1);
 110   1      
 111   1        LCD1602_E = 1;    //写入时序
 112   1        Lcd1602_Delay1ms(5);
 113   1        LCD1602_E = 0;
 114   1      }
 115          #endif
 116          /*******************************************************************************
 117          * 函 数 名       : LcdInit()
C51 COMPILER V9.52.0.0   LCD                                                               05/15/2015 14:17:59 PAGE 3   

 118          * 函数功能     : 初始化LCD屏
 119          * 输    入       : 无
 120          * 输    出       : 无
 121          *******************************************************************************/       
 122          #ifndef   LCD1602_4PINS
              void LcdInit()              //LCD初始化子程序
              {
                unsigned char i;
                unsigned char j;
                
              
                LcdWriteCom(0x38);  //开显示
                LcdWriteCom(0x0c);  //开显示不显示光标
                LcdWriteCom(0x06);  //写一个指针加1
                LcdWriteCom(0x01);  //清屏
                LcdWriteCom(0x82);
                for(i=0;i<5;i++)
                {
                  LcdWriteData(first1[i]);  
                }
                LcdWriteCom(0x8A);
                LcdWriteData(dian);
                LcdWriteCom(0x8C);
                LcdWriteData(kong);
                LcdWriteCom(0x8D);
                LcdWriteData(sheshi);
                LcdWriteCom(0x8E);
                for(j=0;j<3;j++)
                {
                  LcdWriteData(du[j]);  
                }
                LcdWriteCom(0xC2);
                for(i=0;i<5;i++)
                {
                  LcdWriteData(second[i]);  
                }
                LcdWriteCom(0x8A);
                LcdWriteData(dian);
                LcdWriteCom(0x8C);
                LcdWriteData(kong);
                LcdWriteCom(0xCD);
                LcdWriteData(sheshi);
                LcdWriteCom(0xCE);
                for(j=0;j<3;j++)
                {
                  LcdWriteData(du[j]);  
                }
                //LcdWriteCom(0x82);  //设置数据指针起点
              }
              #else
 168          void LcdInit()              //LCD初始化子程序
 169          {
 170   1        unsigned char i;
 171   1        unsigned char j;
 172   1        LcdWriteCom(0x32);   //将8位总线转为4位总线
 173   1        LcdWriteCom(0x28);   //在四位线下的初始化
 174   1        LcdWriteCom(0x0c);  //开显示不显示光标
 175   1        LcdWriteCom(0x06);  //写一个指针加1
 176   1        LcdWriteCom(0x01);  //清屏
 177   1        LcdWriteCom(0x82);
 178   1        for(i=0;i<5;i++)
 179   1        {
C51 COMPILER V9.52.0.0   LCD                                                               05/15/2015 14:17:59 PAGE 4   

 180   2          LcdWriteData(first1[i]);  
 181   2        }
 182   1        LcdWriteCom(0x8A);
 183   1        LcdWriteData(dian);
 184   1        LcdWriteCom(0x8C);
 185   1        LcdWriteData(kong);
 186   1        LcdWriteCom(0x8D);
 187   1        LcdWriteData(sheshi);
 188   1        LcdWriteCom(0x8E);
 189   1        for(j=0;j<3;j++)
 190   1        {
 191   2          LcdWriteData(du[j]);  
 192   2        }
 193   1        LcdWriteCom(0xC2);
 194   1        for(i=0;i<5;i++)
 195   1        {
 196   2          LcdWriteData(second[i]);  
 197   2        }
 198   1        LcdWriteCom(0xCA);
 199   1        LcdWriteData(dian);
 200   1        LcdWriteCom(0xCC);
 201   1        LcdWriteData(kong);
 202   1        LcdWriteCom(0xCD);
 203   1        LcdWriteData(sheshi);
 204   1        LcdWriteCom(0xCE);
 205   1        for(j=0;j<3;j++)
 206   1        {
 207   2          LcdWriteData(du[j]);  
 208   2        }
 209   1        //LcdWriteCom(0x82);  //设置数据指针起点
 210   1      }
 211          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
